getwd
getwd()
setwd("/Users/kevin-kindlerhotmail.com/Documents/uzh/FS24/R/day5/project")
library(data.table)
library(lubridate)
library(myRFMpackage)
library(profvis)
library(microbenchmark)
library(fastmatch)
library(compiler)
library(doParallel)
library(foreach)
data_customer <- fread("data_customer.csv")
data_personal <- fread("data_personal.csv")
data <- merge(data_customer, data_personal, by = "CustomerId")
data$Exited <- as.factor(data$Exited)
data$Gender <- as.factor(data$Gender)
str(data)
summary(data)
data_customer <- fread("data_customer.csv")
data_personal <- fread("data_personal.csv")
data <- merge(data_customer, data_personal, by = "CustomerId")
data$Exited <- as.factor(data$Exited)
data$Gender <- as.factor(data$Gender)
CreditScore
data$CreditScore
# get the column names of the data
colnames(data)
model <- glm(Exited ~ CreditScore + Gender + Age + Tenure + Balance + NumOfProducts + HasCrCard + IsActiveMember + EstimatedSalary,
data = data,
family = "binomial")
#3.2. Predict the churn probability for each customer and add this as a new column to your table.
# Hint: use the following function: predict(object, newdata, type="response").
# Object is your model for churn probability from the previous step, newdata is your merged data from step 2.1.
data$churn_prob <- predict(model, data, type = "response")
data
summary(model)
#3.3. Which are the customer with the highest and the lowest churn probability?
data[which.max(data$churn_prob),]
data[which.min(data$churn_prob),]
# 3.4. Compute the average churn probability for men and women.
average_churn_prob <- aggregate(churn_prob ~ Gender, data = data, FUN = mean)
print(average_churn_prob)
churn_prob <- function(data, customer_id){
customer <- data[CustomerId == customer_id,]
return(customer$churn_prob)
}
